@page "/create-user"
@using LMS.Services
@using LMS.Shared.DTOs
@* @inject ITeacherService TeacherService *@
@inject NavigationManager NavigationManager

<h1>Create New User</h1>

<EditForm Model="@userDto" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="email">Email:</label>
        <InputText id="email" @bind-Value="userDto.Email" class="form-control" />
        <ValidationMessage For="@(() => userDto.Email)" />
    </div>

    <div class="form-group">
        <label for="password">Password:</label>
        <InputText id="password" @bind-Value="userDto.Password" class="form-control" type="password" />
        <ValidationMessage For="@(() => userDto.Password)" />
    </div>

    <div class="form-group">
        <label for="role">Role:</label>
        <InputSelect id="role" @bind-Value="userDto.Role" class="form-control">
            <option value="">Select a role...</option>
            <option value="Teacher">Teacher</option>
            <option value="Student">Student</option>
        </InputSelect>
        <ValidationMessage For="@(() => userDto.Role)" />
    </div>

    <button type="submit" class="btn btn-primary">Create User</button>
</EditForm>

@code {
    private CreateUserDto userDto = new CreateUserDto();

    private async Task HandleValidSubmit()
    {
        // var result = await TeacherService.CreateUserAsync(userDto);
        // if (result.Succeeded)
        // {
        //     NavigationManager.NavigateTo("/teacher-dashboard");
        // }
        // else
        // {
        //     // Handle errors, perhaps display them to the user
        //     foreach (var error in result.Errors)
        //     {
        //         Console.WriteLine($"Error: {error.Description}");
        //     }
        // }
    }
}

